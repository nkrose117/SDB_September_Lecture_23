/* This is a comment within CSS */
/* I want to change the color of my p tags */
/* I have to start by telling css file what I want to change */
/* "style rule" is everything inside the {} */

/* list of CSS selectors
    -Element Selector is going to select all instances of a given tag from our HTML page */


    p, h1 {
        /* Select all <p> and <h1> tags */
    color:deeppink;
    background-color: rgb(rgb(169, 61, 61), rgb(117, 156, 117), rgb(59, 59, 104));
    /* change text color of all p tags to deeppink */
    
}
/* By using a comma I can have this style rule effect multiple different tags at the same time. */
/* Body Selector. What we write before the {} is going to be our "Selector". A selector is the term for element(s) being edited in css page.*/

body {
background-color: darkslategrey;

/* in CSS we have three major ways to refer to color:
    -Color Keyword
     -blue, black, gray etc.
    -RGB Value 
      rgb(0-255, 0-255, 0-255)
       - Each number represents how strong the red green or blue is.
    -Hex Color
        -ex: #002255
        -Each pair of values represents one of our "rgb" values, so a hex color is made of 3 pairs of characters. These characters count from 0-9, then a-f.
        -0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f. */
}

/* I must use a period . to select my Class name. This will select all elements with this class name. This example selects an elements with a "class" of "header".*/
.header {
    text-align: center;
    /* The name "header" is not required, it can be whatever you want to call it as long as it is consistent. */
}
/* Change all h tags together at the same time. (use commas, see below. */
/* Compound Selector: It is more than a single selector in one rule. */
h1, h2, h3, h4, h5, h6 {
    /* This will now change all of my h tags at the same time. */
    text-decoration: underline;
    /* Now they are all underlined */
}

/* Change a specific tag by selecting an ID */
/* To select an ID, I must use a hashtag # */
#unique {
    text-decoration: underline overline;
    background-color: blueviolet;
    color: aquamarine;
}
/* We should only attach an "ID" to one item on a page. It will become a problem later on. If we use the same ID multiple times, the styling will still apply, but this does not mean we should use it in place of a "class". Our browser and JavaScript is only going to pay attention to the first item with a given ID when we start making our pages functional.*/

/* I can focus my selector to only focus on button (btn) class within a certain container (container ex: inside the nav tag) Entering nav then .btn specifies these certain btn's within the nav class. (When the contact example was contained in a span tag it was no longer styled because it was no longer a direct child to the nav tag which is the one that is specified in the example below.) */
nav .btn {
    text-shadow: 2px 2px 2px black;
}

/* This selector will only effect the direct children of our nav because there is a carrot after nav. If there was no carrot it would select everything inside of the nav tag regardless of whether or not it was a direct child or not.*/
nav> .btn {
    color: yellow;
}

/* adding letters to the hashtags in the anchor tags (the links) so they can be styled separately. */

a {
    color: darkviolet!important;
}

/* CSS Hierarchy

This is going to allow CSS to use distinct levels of priority to style our elements. The order of priority from weakest to strongest is::after

Eternal Stylesheet:
-Element
-Class
-ID
-Important ( !important; )

Internal Stylesheet: (top of the html file within the head tag, add a style tag.)
-Element
-Class
-ID
-!important

"External Stylesheet" is a .css file which is not the html file we have our webpage in
/* My internal stylesheet is the css within html at the top */